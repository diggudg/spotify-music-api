name: Workflow dispatch

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PACKAGE: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "7.x.x"
      # - name: Seutup appsettings
      #   run: cp appsettings.json.example  appsettings.json
      #   shell: bash

      - name: Create appsettings.json
        run: |
          echo '{
            "Key1": "Value1",
            "Key2": ${{ secrets.CONNECTION_STRING }}
          }' > appsettings.json
        shell: bash
      # - name: Substitute appsettings.json values
      #   uses: actions/variable-substitution@v3
      #   with:
      #     files: appsettings.json
      #     variables: |
      #       {
      #         "ConnectionStrings": {
      #           "DefaultConnection": "${{ secrets.CONNECTION_STRING }}"
      #         }
      #       }

      - name: Setup environment variables
        run: |
          echo "PACKAGE=${{ env.PACKAGE }}" >> $GITHUB_ENV
      - name: Install dependencies
        run: dotnet restore spotify_api.csproj
      - name: Build
        run: dotnet build  spotify_api.csproj --no-restore
      - name: Test
        run: dotnet test spotify_api.csproj --no-restore --verbosity normal
      # - name: Publish
      #   run: dotnet publish spotify_api.csproj --no-restore --no-build --configuration Release --output ./publish
    
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
          name: spotify_api
          path: ./obj
      - name: print appsettings
        run: cat appsettings.json
        shell: bash

  # deploy:
  #   name: Deploy to ${{ github.event.name }} ${{ github.run_number }}
  #   runs-on: ubuntu-latest
  #   run: |
  #     echo PACKAGE ${{ env.PACKAGE }}
  #   needs: [build]
  #   steps:
  #     - name: Deploy to ${{ github.event.name }}
  #       run: |
  #         echo digggudg run_number ${{ env.PACKAGE }}