// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyApi.DbContext;

#nullable disable

namespace spotify_api.Migrations
{
    [DbContext(typeof(SpotifyContext))]
    [Migration("20230518130928_added_favorites_tables_key")]
    partial class added_favorites_tables_key
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0-preview.4.23259.3");

            modelBuilder.Entity("SpotifyApi.Model.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Href")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Label")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("SpotifyApi.Model.Artist", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Href")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("SpotifyApi.Model.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Height")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Width")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "width");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("SpotifyApi.Model.SpotifyToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "access_token");

                    b.Property<int>("ExpiresIn")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "expires_in");

                    b.Property<DateTime>("ExpiryTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "refresh_token");

                    b.Property<string>("Scope")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "scope");

                    b.Property<string>("TokenType")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "token_type");

                    b.HasKey("Id");

                    b.ToTable("SpotifyToken");
                });

            modelBuilder.Entity("SpotifyApi.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "country");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "display_name");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("Href")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "href");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uri")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "uri");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("spotifyApi.Model.FavoriteAlbums", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AlbumId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FavoriteAlbums");
                });

            modelBuilder.Entity("SpotifyApi.Model.Artist", b =>
                {
                    b.HasOne("SpotifyApi.Model.Album", null)
                        .WithMany("Artist")
                        .HasForeignKey("AlbumId");
                });

            modelBuilder.Entity("SpotifyApi.Model.Album", b =>
                {
                    b.Navigation("Artist");
                });
#pragma warning restore 612, 618
        }
    }
}
